//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DemoTooooop
{
    using System;
    using System.Collections.Generic;
    using System.Windows.Media.Imaging;
    
    public partial class Product
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Product()
        {
            this.Order = new HashSet<Order>();
        }
    
        public string ProductArticleNumber { get; set; }
        public string ProductName { get; set; }
        public string ProductDescription { get; set; }
        public int ProductCategory { get; set; }
        public string ProductManufacturer { get; set; }
        public string ProductProvider { get; set; }
        public string ProductPhoto { get; set; }
        public decimal ProductCost { get; set; }
        public string ProductUnit { get; set; }
        public Nullable<byte> ProductDiscountAmount { get; set; }
        public Nullable<byte> ProductSale { get; set; }
        public int ProductQuantityInStock { get; set; }
        public string ProductStatus { get; set; }
    
        public virtual Category Category { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Order> Order { get; set; }

        public BitmapImage ProductImage
        {
            get
            {
                BitmapImage image;
                if(ProductPhoto != null)
                {
                    image = new BitmapImage(new Uri("Images/" + $"{ProductPhoto}",UriKind.Relative));
                }
                else image = new BitmapImage(new Uri("Images/null.png", UriKind.Relative));
                return image;
            }
        }

        public decimal ProductRealCost
        {
            get
            {
                decimal price = (decimal)(ProductCost - ProductCost * ProductSale / 100);
                return price;
            }
        }
    }
}
